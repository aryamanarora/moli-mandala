{
  
    
        "post0": {
            "title": "Week 0",
            "content": "Reading: Hans Henrick Hock, Elena Bashir (eds.) The Languages and Linguistics of South Asia: A Contemporary Guide. | File | . The discussion was broad and quite varied, given the nature of the reading. Future readings will probably not be the same; on the organisational side, for that reason, readings well happen every 2 weeks so that the intervening meetings are more open. . Some of the interesting discussion was on language contact and how that contributes to the difficulty of the tree model in describing South Asian language history. Areal features that have spread through contact that we discussed included retroflexion (note that even Great Andamanese1 and Burushaski have this, and Avestan’s /ʂ/). Also of interest were v &gt; b2 in Brahui, Kannada, and many Indo-Aryan languages, which seems to be more of a chance convergence. The fact that unrelated families seem to be affected by feature spread is a big challenge for historical linguistics, in making sense of shared innovations. . There does not seem to be much work on applying the wave model in South Asia at least, beyond some recent statistical attempts. In Indo-Aryan, this work is done by Chundra Cathcart and Taraka Rama. Nothing similar in Dravidian despite the existence of good resources like DEDR. Some interesting work has come out on admixture models etc. in recent years, such as Murawaki (2020) on Fijian.3 Note that the tree model has greater success in some regions than in others, and has been good for broad Indo-European reconstruction.4 . There was a short discussion in the comments about computational decipherment of “lost” languages which is really fascinating.5 This recent article prompted that discussion. . We also discussed the principles behind sound change: can they be modelled statistically? Some sound changes are more likely cross-lingually (thinking of big databases that try to document these changes), such as palatalisation, but that does not seem to be a firm basis to rule out rarer changes.2 What principles are behind sound change? We discussed phonetic dispersion, the possibility of diglossia’s influence, and mutual reinforcement of seemingly unstable features like breathy-voice in South Asia. We also listened to Sunil Menon’s demonstration of Malayalam’s three-way stop /t̪ t ʈ/ contrast, and two-way rhotic /ɾ r/. . Footnotes . Gopalakrishnan R &#8617; . | Suresh Kolichala &#8617; &#8617;2 . | https://www.aclweb.org/anthology/2020.emnlp-main.69.pdf &#8617; . | Vineeth Rajan &#8617; . | Jajwalya Karajgikar &#8617; . |",
            "url": "https://aryamanarora.github.io/moli-mandala-test/reading/language%20contact/historical%20linguistics/wave%20model/2021/03/05/week-0.html",
            "relUrl": "/reading/language%20contact/historical%20linguistics/wave%20model/2021/03/05/week-0.html",
            "date": " • Mar 5, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aryamanarora.github.io/moli-mandala-test/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Members",
          "content": "Members . Aaditya Kulkarni | Adam Farris | Agnel | Akshit Jha | Alexander Jabbari | Anaïs | Anirudh Kanisetti | Anmol Goel | Anusha Anand | Awais shah | Bharathan R D | Bhawani | Chandini White | Chandni Dutta | Dharmender | Dhruv Karande | Dwija Parikh | Ed J Pedraza-Robles | Farah Nazir | Gopalakrishnan R | Harveen Brar | Judy Lenaduwe | Karthik Malli | Kaushalya Perera | Kelvin Jackson | Luke Gessler | Maitrey Mehta | Mukund Choudhary | Mythili Menon | Nav M | Nayana | Nithyaa | Pranav Jayachand | Pranav Maneriker | Rahul Aralikatte | ROOMY NAQVY | Ry Smith | Saad | Sameer ud Dowla Khan | Samopriya Basu | Sathvik Nair | Sayantani Banerjee | Shaandro Sarkar | Sharbatanu Chatterjee | Shashank Shenoy Basty | Shinjini Ghosh | Shreekanth Murthy | Srabasti Dey | Suhas Mahesh | Sunil Menon | Suresh Kolichala | Swair Shah | Talhah Mohammed | Travis Bartley | Uddyalok | Vineeth Rajan | Zeerak Waseem | .",
          "url": "https://aryamanarora.github.io/moli-mandala-test/members/",
          "relUrl": "/members/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aryamanarora.github.io/moli-mandala-test/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}